using Epic.OnlineServices;
using HarmonyLib;
using System.Collections.Generic;
using Kingmaker.Blueprints;
using Kingmaker.Blueprints.Classes.Selection;
using Kingmaker.Blueprints.Classes;
using Kingmaker.Designers.EventConditionActionSystem.Actions;
using Kingmaker.Enums;
using Kingmaker.RuleSystem;
using Kingmaker.UnitLogic.Abilities.Blueprints;
using Kingmaker.UnitLogic.Abilities.Components;
using Kingmaker.UnitLogic.FactLogic;
using Kingmaker.UnitLogic.Mechanics.Actions;
using Kingmaker.UnitLogic.Mechanics.Components;
using Kingmaker.UnitLogic.Mechanics;
using TabletopTweaks.Core.ModLogic;
using TabletopTweaks.Core.Utilities;
using static UnityModManagerNet.UnityModManager;
using System.Linq;
using Kingmaker.Blueprints.Classes.Prerequisites;
using Kingmaker.Designers.Mechanics.Facts;
using Kingmaker.Utility;
using Kingmaker.Blueprints.Items.Weapons;
using Kingmaker.Designers.Mechanics.Buffs;
using Kingmaker.UnitLogic.Buffs.Blueprints;
using UnityEngine;
using Kingmaker.EntitySystem.Stats;

namespace OccultistArcanist.NewContent.ArcanistExploits
{
    public static class ArcaneDiscovery
    {
        static BlueprintCharacterClass arcanist_class = BlueprintTools.GetBlueprint<BlueprintCharacterClass>("52dbfd8505e22f84fad8d702611f60b7");
        public static BlueprintFeatureSelection exploit;

        static BlueprintCharacterClass wizard_class = BlueprintTools.GetBlueprint<BlueprintCharacterClass>("ba34257984f4c41408ce1dc2004e342e");
        static BlueprintArchetype exploiter_archetype = BlueprintTools.GetBlueprint<BlueprintArchetype>("6d2027b4eec590c41adb5caeb7bb026d");


        static BlueprintCharacterClass slayer_class = BlueprintTools.GetBlueprint<BlueprintCharacterClass>("c75e0971973957d4dbad24bc7957e4fb");
        static BlueprintArchetype arcane_enforcer_archetype = BlueprintTools.GetBlueprint<BlueprintArchetype>("23a5d0ca607f6094097d509b2b1f4a10");

        static string guid_name = "ArcanistArcaneDiscovery";
        static string description = "An arcanist who selects this arcanist exploit learns an arcane discovery. When she learns an arcane discovery, her level must be high enough for her to qualify for that discovery, using half her arcanist level as her wizard level to determine whether she qualifies.\n" +
            "She cannot select an arcane discovery in place of a feat (unless she also has wizard levels).";


        static internal void load()
        {
            var arcane_discovery_selection = BlueprintTools.GetBlueprint<BlueprintFeatureSelection>("45b72087ac2d4554aec4f44be852eddd");


            exploit = arcane_discovery_selection.CreateCopy(Main.HaddeqiModContext, guid_name + "FeatureSelection", bp => {
                bp.SetDescription(Main.HaddeqiModContext, description);
                bp.RemoveComponents<PrerequisiteClassLevel>();
            });


            //if (Main.HaddeqiModContext.AddedContent.Arcanist.IsDisabled("EnableArcaneDiscovery")) { return; }
            foreach (var f in exploit.Features)
            {
                if (f.GetComponents<PrerequisiteClassLevel>().Any())
                {
                    int level = f.GetComponent<PrerequisiteClassLevel>().Level;
                    f.GetComponent<PrerequisiteClassLevel>().Group = Prerequisite.GroupType.Any;
                    f.AddPrerequisite<PrerequisiteClassLevel>(p => {
                        p.m_CharacterClass = arcanist_class.ToReference<BlueprintCharacterClassReference>();
                        p.Level = level * 2;
                        p.Group = Prerequisite.GroupType.Any;
                    });
                }
            }

            FeatTools.AddAsArcanistExploit(exploit);
            var extra_exploit = BlueprintTools.GetBlueprint<BlueprintFeatureSelection>("8ecee479c6d04c73926c4d95345b9314");
            extra_exploit.AddFeatures(exploit);
        }


    }
}
